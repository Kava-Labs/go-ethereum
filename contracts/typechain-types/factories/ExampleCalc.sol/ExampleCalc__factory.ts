/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ExampleCalc,
  ExampleCalcInterface,
} from "../../ExampleCalc.sol/ExampleCalc";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "calcDiff",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "calcSum",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDiff",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSum",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040527303000000000000000000000000000000000000036000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b5061045b806100746000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630b1bcee71461005157806317452eb01461006f578063569c5f6d1461008b578063e5ab84c4146100a9575b600080fd5b6100596100c5565b604051610066919061032e565b60405180910390f35b6100896004803603810190610084919061037a565b61015c565b005b6100936101ed565b6040516100a0919061032e565b60405180910390f35b6100c360048036038101906100be919061037a565b610284565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630b1bcee76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610133573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015791906103cf565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166317452eb083836040518363ffffffff1660e01b81526004016101b79291906103fc565b600060405180830381600087803b1580156101d157600080fd5b505af11580156101e5573d6000803e3d6000fd5b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663569c5f6d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027f91906103cf565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e5ab84c483836040518363ffffffff1660e01b81526004016102df9291906103fc565b600060405180830381600087803b1580156102f957600080fd5b505af115801561030d573d6000803e3d6000fd5b505050505050565b6000819050919050565b61032881610315565b82525050565b6000602082019050610343600083018461031f565b92915050565b600080fd5b61035781610315565b811461036257600080fd5b50565b6000813590506103748161034e565b92915050565b6000806040838503121561039157610390610349565b5b600061039f85828601610365565b92505060206103b085828601610365565b9150509250929050565b6000815190506103c98161034e565b92915050565b6000602082840312156103e5576103e4610349565b5b60006103f3848285016103ba565b91505092915050565b6000604082019050610411600083018561031f565b61041e602083018461031f565b939250505056fea2646970667358221220342914d9aee64304984db399b56e056f9b7f08b176582268bbf013d42ea65dd664736f6c63430008130033";

type ExampleCalcConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleCalcConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleCalc__factory extends ContractFactory {
  constructor(...args: ExampleCalcConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ExampleCalc & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ExampleCalc__factory {
    return super.connect(runner) as ExampleCalc__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleCalcInterface {
    return new Interface(_abi) as ExampleCalcInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ExampleCalc {
    return new Contract(address, _abi, runner) as unknown as ExampleCalc;
  }
}
