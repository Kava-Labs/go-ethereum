/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ExampleSum3,
  ExampleSum3Interface,
} from "../../ExampleSum3.sol/ExampleSum3";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    name: "calcSum3",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    name: "calcSum3Call",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    name: "calcSum3DelegateCall",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getSum3",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSum3StaticCall",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610913806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806318b613611461005c5780638e2a5b251461008c578063a104464e146100a8578063b8f5b52b146100c6578063d87e5a16146100f6575b600080fd5b6100766004803603810190610071919061063f565b610114565b6040516100839190610722565b60405180910390f35b6100a660048036038101906100a1919061063f565b610264565b005b6100b06102ec565b6040516100bd9190610753565b60405180910390f35b6100e060048036038101906100db919061063f565b61037b565b6040516100ed9190610722565b60405180910390f35b6100fe6104c9565b60405161010b9190610722565b60405180910390f35b60606000638e2a5b2560e01b8585856040516024016101359392919061076e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008073030000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16836040516101d091906107e1565b6000604051808303816000865af19150503d806000811461020d576040519150601f19603f3d011682016040523d82523d6000602084013e610212565b606091505b509150915081610257576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024e9061087b565b60405180910390fd5b8093505050509392505050565b73030000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638e2a5b258484846040518463ffffffff1660e01b81526004016102b59392919061076e565b600060405180830381600087803b1580156102cf57600080fd5b505af11580156102e3573d6000803e3d6000fd5b50505050505050565b60008073030000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a104464e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561034e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037291906108b0565b90508091505090565b60606000638e2a5b2560e01b85858560405160240161039c9392919061076e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008073030000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168360405161043791906107e1565b600060405180830381855af49150503d8060008114610472576040519150601f19603f3d011682016040523d82523d6000602084013e610477565b606091505b5091509150816104bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b39061087b565b60405180910390fd5b8093505050509392505050565b6060600063a104464e60e01b604051602401604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008073030000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168360405161057691906107e1565b600060405180830381855afa9150503d80600081146105b1576040519150601f19603f3d011682016040523d82523d6000602084013e6105b6565b606091505b5091509150816105fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f29061087b565b60405180910390fd5b80935050505090565b600080fd5b6000819050919050565b61061c81610609565b811461062757600080fd5b50565b60008135905061063981610613565b92915050565b60008060006060848603121561065857610657610604565b5b60006106668682870161062a565b93505060206106778682870161062a565b92505060406106888682870161062a565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b838110156106cc5780820151818401526020810190506106b1565b60008484015250505050565b6000601f19601f8301169050919050565b60006106f482610692565b6106fe818561069d565b935061070e8185602086016106ae565b610717816106d8565b840191505092915050565b6000602082019050818103600083015261073c81846106e9565b905092915050565b61074d81610609565b82525050565b60006020820190506107686000830184610744565b92915050565b60006060820190506107836000830186610744565b6107906020830185610744565b61079d6040830184610744565b949350505050565b600081905092915050565b60006107bb82610692565b6107c581856107a5565b93506107d58185602086016106ae565b80840191505092915050565b60006107ed82846107b0565b915081905092915050565b600082825260208201905092915050565b7f63616c6c20746f20707265636f6d70696c656420636f6e74726163742066616960008201527f6c65640000000000000000000000000000000000000000000000000000000000602082015250565b60006108656023836107f8565b915061087082610809565b604082019050919050565b6000602082019050818103600083015261089481610858565b9050919050565b6000815190506108aa81610613565b92915050565b6000602082840312156108c6576108c5610604565b5b60006108d48482850161089b565b9150509291505056fea264697066735822122077d9e732c7fca9bbc5a57326901ca18deeceb9eb1a07ae7fa4b9b72f33a9b33764736f6c63430008130033";

type ExampleSum3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleSum3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleSum3__factory extends ContractFactory {
  constructor(...args: ExampleSum3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ExampleSum3 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ExampleSum3__factory {
    return super.connect(runner) as ExampleSum3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleSum3Interface {
    return new Interface(_abi) as ExampleSum3Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): ExampleSum3 {
    return new Contract(address, _abi, runner) as unknown as ExampleSum3;
  }
}
