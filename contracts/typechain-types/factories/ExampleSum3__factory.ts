/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { ExampleSum3, ExampleSum3Interface } from "../ExampleSum3";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    name: "sum3",
    outputs: [
      {
        internalType: "bytes",
        name: "h",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610629806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d412532e14610030575b600080fd5b61004a60048036038101906100459190610343565b610060565b6040516100579190610426565b60405180910390f35b6060600080600b73ffffffffffffffffffffffffffffffffffffffff1686868660405160200161009293929190610457565b6040516020818303038152906040526040516100ae91906104ca565b600060405180830381855afa9150503d80600081146100e9576040519150601f19603f3d011682016040523d82523d6000602084013e6100ee565b606091505b509150915081610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012a9061053e565b60405180910390fd5b6101716040518060400160405280600881526020017f6c6f67206f75743a000000000000000000000000000000000000000000000000815250610186565b61017a8161021f565b80925050509392505050565b61021c8160405160240161019a91906105a2565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506102b8565b50565b6102b5816040516024016102339190610426565b6040516020818303038152906040527f0be77f56000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506102b8565b50565b6102cf816102c76102d26102f3565b63ffffffff16565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6102fe819050919050565b6103066105c4565b565b600080fd5b6000819050919050565b6103208161030d565b811461032b57600080fd5b50565b60008135905061033d81610317565b92915050565b60008060006060848603121561035c5761035b610308565b5b600061036a8682870161032e565b935050602061037b8682870161032e565b925050604061038c8682870161032e565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b838110156103d05780820151818401526020810190506103b5565b60008484015250505050565b6000601f19601f8301169050919050565b60006103f882610396565b61040281856103a1565b93506104128185602086016103b2565b61041b816103dc565b840191505092915050565b6000602082019050818103600083015261044081846103ed565b905092915050565b6104518161030d565b82525050565b600060608201905061046c6000830186610448565b6104796020830185610448565b6104866040830184610448565b949350505050565b600081905092915050565b60006104a482610396565b6104ae818561048e565b93506104be8185602086016103b2565b80840191505092915050565b60006104d68284610499565b915081905092915050565b600082825260208201905092915050565b7f707265636f6d70696c652063616c6c206661696c656400000000000000000000600082015250565b60006105286016836104e1565b9150610533826104f2565b602082019050919050565b600060208201905081810360008301526105578161051b565b9050919050565b600081519050919050565b60006105748261055e565b61057e81856104e1565b935061058e8185602086016103b2565b610597816103dc565b840191505092915050565b600060208201905081810360008301526105bc8184610569565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea2646970667358221220138b8b95419e468cde0b0f057a53c9bc741fa464c1c6043b7733896eda0cbf5364736f6c63430008130033";

type ExampleSum3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleSum3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleSum3__factory extends ContractFactory {
  constructor(...args: ExampleSum3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ExampleSum3 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ExampleSum3__factory {
    return super.connect(runner) as ExampleSum3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleSum3Interface {
    return new Interface(_abi) as ExampleSum3Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): ExampleSum3 {
    return new Contract(address, _abi, runner) as unknown as ExampleSum3;
  }
}
